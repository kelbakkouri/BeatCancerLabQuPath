1. First step is having all your photos downloaded to your computer. 

2. You need to remove all non-tiff files from your images folder. The RemoveFiles.py contains two functions within it. One removes all non-tiff files from a directory and the other removes all images with even number endings. You can use chatgpt to make other functions to better suit your needs, but at the very least run the remove all non-tiff functions with your root directory. 

3. Open QuPath and click automate, (No need to open a project). Before starting this please download "Add all images to project.groovy".
  a) Please select script editor
  b) Pleaes select open script from file 
  c) Please select the "Add all images to file script"
  d) Click run and when prompted select the outermost directory in which you plan to run analysis upon a batch (I.E. I have an      an images folder but within that I will run to separate analysis types upon resistent and sensitive cells. I should go   
     one directory further and select the resistant folder). 
  e) Wait roughly 1 minute per 100 photos
  f) Now minimize the script editor and click back to QuPath main editor. 
  g) Click file and open project and then navigate and open the previous folder you selected. You should see a new QuPath           folder. Click this and then select the project file (It has a unique extension).

4. READ ALL STEPS CAREFULLY.

Option 1:
This will require a little more in depth understanding of QuPath, but still very doable. 

  a) Select an image in the image list
  b) Please hover click objects -> Annotations -> Create full image annotation
  c) Pleaes hover click Analyze -> Cell Detection -> Cell Detection
  d) The most important numbers to change will be THRESHOLD< SPLIT BY SHAPE, and BACKGROUND RADIUS. THRESHOLD adjust how     
     much contrast needs to be detected for a cell to be identifyable; SPLIT BY SHAPE is meant to help with splitting clumps 
     of cells, but may cause issues with counting; Background radius should be set to your largest cell nucleus. The 
     background radius is what is used to find the background color in contrast to the cell color. The lower it is the more 
     likely it will be to skip blobs of cells or larger cells. 
  e) Once you have found a set of values that work well for your images, navigate to workflow in the left-project bar. 
  f) Select Create Script
  g) Please note there will be a large number of lines depending on how many tests of the cell detection parameters you ran.      Ensure that you only have one groovy line that says createAnnotationsFromPixelClassifier. Delete all, but the last one 
     shown since those were your chosen settings.
  h) Click the three dots in the bottom right corner of the editor and select "Run on Project" 
  i) Wait approximately 5-10 minutes per 100 images

5. Now it is time to export our results

  a) Please hover click measure -> export measurements
  b) Click the double arrow in the middle of the "Available" and "Selected" windows.
  c) Click image dropdown next to export type. Ensure annotations is clicked instead. 
  d) Click on Tab (.tsv) next to Separator. Ensure Comma (.csv) is clicked instead.
  e) Select choose to see what the file will be saved as and where it will be saved. Feel free to edit these if you have 
     high computer literacy (You know your way around your directories).
  f) Click Populate. This will take a moment to load.
  g) Now click "image" and "num detections" and any other columns you may want. 
  h) Finally click export.

HOORAY YOU HAVE YOUR DATA!!!!

